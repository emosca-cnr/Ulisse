% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs_cross_talk.R
\name{gs_cross_talk}
\alias{gs_cross_talk}
\title{Cross-talks between gene-sets}
\usage{
gs_cross_talk(
  gs_list,
  gene_network_adj,
  k = 9,
  shared = F,
  hash = T,
  ct_info = F,
  mc_cores_perm = 1,
  mc_cores_ct = 1
)
}
\arguments{
\item{gs_list}{a named list of genes grouped into gene sets, as obtained from `preparing_gs_list`, `preparing_msigdb_list()`, 
`preparing_DEG_list()` or `preparing_expr_list()` functions}

\item{gene_network_adj}{adjacency matrix of the whole gene network considered (can be a sparseMatrix)}

\item{k}{number of permutations}

\item{shared}{logical, if the cross-talk calculation should consider shared genes (`TRUE`, suggested only for cell-cell communication) or 
not (`FALSE`, suggested for pathway cross-talk)}

\item{hash}{logical, if hash map should be used to speed cross-talk calculation. Suggested only with high number of gene-sets (like in pathway cross-talk)}

\item{ct_info}{logical, if the function has to return the detail of gene-gene interactions between gene sets}

\item{mc_cores_perm}{number of thread to be used in permutations}

\item{mc_cores_pct}{number of threads to be used for cross talk calculation}
}
\value{
The function can return two output type:
\itemize{
 \item `ct_info = FALSE`: only the cross-talk results are returned as output
 \itemize{
   \item gs1,gs2: names of gene-set pairs considered
   \item ct_score: cross-talk score
   \item ngenes_gs1,ngenes_gs2: number of genes in `gs1` and `gs2`
   \item nlink: number of links between `gs1` and `gs2`
   \item p_value_link: p-value score calculated by using the permutation approach
   \item FDR_link: empirical FDR
   \item p_adj_BH: `p-value_link` adjusted using BH method (see `p.adjust()` function)
   \item weight_gs1,weight_gs2: cumulative weights of the genes involved in cross-talk between `gs1` and `gs2`
   \item genes_gs1,genes_gs2: genes involved in cross-talk between `gs1` and `gs2`
 }
 \item `ct_info = TRUE`: the cross-talk results and the detail of gene-gene interactions between gene-sets are returned as output
 \enumerate{
  \item ct_info: gene-gene interaction details
  \itemize{
   \item gs1,gs2: name of the gene-sets
   \item gs1_gene,gs2_gene: genes involved in the cross-talk
   \item score: the score of the interaction between `gs1_gene` and `gs1_gene`, calculated by multiplying their weigths
  }
 \item ct_res: cross-talk results
 \itemize{
   \item gs1,gs2: names of gene-set pairs considered
   \item ct_score: cross-talk score
   \item ngenes_gs1,ngenes_gs2: number of genes in `gs1` and `gs2`
   \item nlink: number of links between `gs1` and `gs2`
   \item p_value_link: p-value score calculated by using the permutation approach
   \item FDR_link: empirical FDR
   \item p_adj_BH: `p-value_link` adjusted using BH method (see `p.adjust()` function)
   \item weight_gs1,weight_gs2: cumulative weights of the genes involved in cross-talk between `gs1` and `gs2`
   \item genes_gs1,genes_gs2: genes involved in cross-talk between `gs1` and `gs2`
   }
 }
}
}
\description{
The function calculates cross-talk between all gene-set pairs that show a link between their genes
}
\details{
The function takes as inputs the adjacency matrix of the biological network (`gene_network_adj`) and the gene-set list, 
 either obtained through `preparing_gs_list`, `preparing_msigdb_list()`, `preparing_DEG_list()` or `preparing_expr_list()` functions. 
 For each gene-set pair that shows at least a link between them, the function uses the adjacency matrix to calculate cross-talk as described in the paper. 
 Then, for each  pair the function samples randomly from the `gene_network_adj` two lists of the same dimensions of the gene-sets and calculates the 
 number of links between them. This process is repeated `k` times. The number of links obtained with the `k` permuted version of the gene-set pairs 
 are compared to the real to calculate the p-value and FDR. We also provide a corrected p-value using BH method.
}
\examples{
\dontrun{  
 ptw_list <- list(ptwA = setNames(c(1, 1, 1), c("A", "B","C")), 
 ptwB = setNames(c(1, 1, 1), c("D", "E", "F")), ptwC = setNames(c(1, 1, 1), c("A", "B", "E")))
 adj <- matrix(data = sample(c(0,1), 20*20, replace = TRUE), nrow = 6, 
 ncol = 6, dimnames = list(LETTERS[1:20], LETTERS[1:20]))
 pct <- gs_cross_talk(pathway_list = ptw_list, gene_network_adj = adj, 
                      shared = FALSE, hash = FALSE, ct_info = FALSE, 
                      mc_cores_pct = 1, mc_cores_perm = 1, k = 9)
 }
}
