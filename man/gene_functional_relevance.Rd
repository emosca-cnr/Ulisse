% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gene_functional_relevance.R
\name{gene_functional_relevance}
\alias{gene_functional_relevance}
\title{Function to calculate gene functional relevance}
\usage{
gene_functional_relevance(
  ct,
  adj,
  method = "count",
  ct_null = NULL,
  n_cores = 1
)
}
\arguments{
\item{ct}{the data.frame obtained as a result of `gs_cross_talk()`, filtered if needed}

\item{adj}{the adjacency matrix used as an input in `gs_cross_talk()`}

\item{method}{= c("count", "relative") If "count" then the number of genes and gene-sets are listed, if "relative" the counts are 
relative by using a general model. In this case `ct_null` is required}

\item{ct_null}{required only if `method = "relative"`. This should be a cross-talk result table coming from a general model}

\item{n_cores}{number of cores to be use to parallelize gene functional relevance analysis}
}
\value{
If `method = "count` The function returns a data.frame with:
\itemize{
\item gene: the gene analysed
\item functional_diversity: functional diversity
\item interactor_diversity: interactor diversity
\item functional relevance: log2(`functional_diversity`/`interactor_diversity`)
\item n_gs_gene: number of gs in which `gene` is present
\item gs_gene: GS in which `gene` is present
\item functional_gs: list of names of the gene-sets counted in `functional_diversity` separated by `;`
\item interactors_gene: list of names of the genes counted in `interactor_diversity` separated by `;`
} 
Otherwise, if `method = "relative` the function returns a data.frame with:
\itemize{
\item gene: the gene analysed
\item relative_functional_diversity: relative functional diversity
\item relative_interactor_diversity: relative interactor diversity
\item relative_functional relevance: log2(`relative_functional_diversity`/`relative_interactor_diversity`)
\item functional_diversity: functional diversity calculated from `ct`
\item interactor_diversity: interactor diversity calculated from `ct`
\item functional relevance: log2(`functional_diversity`/`interactor_diversity`)
\item n_gs_gene: number of gs in which `gene` is present
\item functional_gs: list of names of the gene-sets counted in `functional_diversity` separated by `;`
\item interactors_gene: list of names of the genes counted in `interactor_diversity` separated by `;`
\item functional_diversity_null: functional diversity calculated from general model `ct_null`
\item interactor_diversity_null: interactor diversity calculated from general model `ct_null`
\item functional_gs_null: list of names of the gs counted in `functional_diversity_null` separated by `;`
\item interactors_gene_null: list of names of the genes counted in `interactor_diversity_null` separated by `;`
}
}
\description{
The function calculates functional diversity and interactor diversity involved in provided cross-talks
}
\details{
The function takes as an input the data.frame obtained from `gs_cross_talk()` and the 
adjacency matrix used as an input of `gs_cross_talk()`. These inputs are used to obtain the genes involved in
significant cross-talks and calculate for each of them the functional diversity and the interactor diversity. 
For each gene, the functional diversity is the number of gene-sets (GS) with which the gene is involved in the formation
of a cross-talk; the interactor diversity is the number of different genes with which the gene has links 
that contribute to the formation of a cross-talk. The function calculate the two measures on the full `gs_cross_talk()` result provided
}
\examples{
\dontrun{
gslist <- list(gsA = c("A", "B","C"), gsB = c("D", "E", "F"), gsC = c("A", "B", "E"))
adj <- matrix(data = sample(c(0,1), 6*6, replace = TRUE), nrow = 6, 
ncol = 6, dimnames = list(LETTERS[1:6], LETTERS[1:6]))
wgt <- rep(1, 6)
pct <- gscross_talk(gslist = gslist, gene_network_adj = adj, 
                    mc_cores_pct = 1, mc_cores_perm = 1, k = 9)
funct_rel <- gene_funct_relevance(ct, adj, to_plot=FALSE)
}
}
