% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enrichment_map.R
\name{enrichment_map}
\alias{enrichment_map}
\title{Enrichment map}
\usage{
enrichment_map(
  gs_score = ora_score,
  gs_list = ptw_all,
  method = c("overlap", "jaccard"),
  coeff = NULL,
  all_gs = TRUE,
  comm_method = "fastgreedy",
  min_comm_size = 2,
  gs_list_size = NULL,
  set_sim_df = NULL,
  file_prefix = "en_map",
  layout = NULL,
  weight_within = 4,
  weight_between = 1,
  pal_community = NULL,
  pal_score = NULL,
  top_ptw = "score",
  wrap = 15,
  label_fontsize = c(6, 5),
  e_color = "gray65",
  e_alpha = 0.5,
  e_range = c(1, 4),
  v_stroke = 0.5,
  v_range = c(2, 8),
  save_plot = TRUE,
  width = 200,
  height = 200,
  res = 300,
  units = "mm"
)
}
\arguments{
\item{gs_score}{named vector of pathway scores}

\item{gs_list}{gene set list}

\item{method}{'overlap' or 'jaccard'}

\item{coeff}{threshold for the similarity score between two gene sets}

\item{all_gs}{TRUE/FALSE, indicating if all gene-sets should be considered or only the ones with similarity score >= `coeff`}

\item{comm_method}{community algorithm to be used; available algorithms are c("fastgreedy", "labprop", "walktrap", "eigen", "multilev", "infomap")
see `Ulisse::find_communities()` for further details}

\item{min_comm_size}{minimum size of a community to be considered in the enrichment map. If `min_comm_size = 1` and `all_gs = TRUE`,
then all gene-sets are displayed}

\item{gs_list_size}{named vector with size f the gene-sets in `gs_list`}

\item{set_sim_df}{optional, data.frame with three columns 'set1', 'set2' and 'sim'}

\item{file_prefix}{prefix used to save similarity data.frame and enrichment map plot (if `save_plot = TRUE`)}

\item{layout}{optional layout matrix, composed of two columns. If not provided, the layout is calculated by using
`igraph::layout_with_fr()` function, together with `weight_within` and `weight_between` (via `Ulisse::edge_weights()` function)}

\item{weight_within}{value to weight the attraction between two vertices of the same community}

\item{weight_between}{value to weight the attraction between two vertices of two distinct communities}

\item{pal_community}{palette to be used to color communities, should be a named vector with a color for each community. If not
provided, `pals::alphabet2()` is used instead}

\item{pal_score}{palette to be used to color vertices according to their `score`. If not provided, `pals::brewer.greens(n = 3)` is used}

\item{top_ptw}{variable used to select top gene-sets to display as a description of the communities. 
Should be either `"score"` (to display top score gene-set for each community) or `"n_genes"` (to display gene-set with higher number of genes)}

\item{wrap}{value used to wrap long gene-sets names as a description of communities. See `stringr::str_wrap()` for further details}

\item{label_fontsize}{font size of the label and description of the communities. If two values are provided,
the fist is used for label, the second for description. See `ggforce::geom_mark_rect()` for further details.}

\item{e_color}{edge color}

\item{e_alpha}{edge transparency}

\item{e_range}{range of widths values used for plotting edges proportional to similarity score}

\item{v_stroke}{width of the stoke of the vertices, which is colored according to communities}

\item{v_range}{range of dimensions of the vertices, which is proportional to the number of genes}

\item{save_plot}{TRUE/FALSE, if the plot should be saved by using `file_prefix` or returned}

\item{width}{jpeg image width}

\item{height}{jpeg image height}

\item{res}{jpeg image resolution}

\item{units}{jpeg image units for width and height}
}
\value{
The function returns a list containing: 
\itemize{
 \item igraph = network object used for plotting the enrichment map
 \item network_data = data.frame with layout (X1,X2 columns), name of the gene-sets together with community ids ("comm_id"), 
  score and number of genes ("n_genes")
 \item path_comm_genes = list composed by the genes present in each community
 \item sim_coeff = data.frame with the similarity score calculated between each gene-set pair
 \item plot = enrichment map plot obtained by using `ggraph` package functions. Only if `save_plot = FALSE`
}
}
\description{
This functions calculates similarities between gene-sets and plot a resulting enrichment map
}
\details{
enrichment_map() function calculates similarities between each gene-set pair by using `method` metric. Subsequently,
 these similarities are filtered to maintain the ones >= `coeff`. `comm_method` algorithm is then used to identify communities, 
 which may be filtered to plot only the ones composed by at least `min_comm_size` gene-sets. Enrichment map is then plotted by using
 `ggraph` package.
}
