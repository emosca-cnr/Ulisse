% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_network_CT.R
\name{plot_network_CT}
\alias{plot_network_CT}
\title{Function for plotting results from PCT or CCC analysis as a network}
\usage{
plot_network_CT(
  ct,
  all = FALSE,
  p_val,
  FDR,
  ct_val,
  community,
  pal_community = NULL,
  edge_col_by = "pct",
  edge_pal = NULL,
  edge_value = NULL,
  edge_width = T,
  edge_adj_col = 0.7,
  file_out = NULL,
  width = 200,
  height = 200,
  res = 300,
  units = "mm",
  layout = NULL,
  legend_edge_col = T,
  legend_filt = T,
  legend_community = T,
  x_filt = -1.5,
  y_filt = 0,
  x_comm = -1.5,
  y_comm = -0.5,
  xl = -1.45,
  yb = 0.2,
  xr = -1.3,
  yt = 0.5,
  ...
)
}
\arguments{
\item{ct}{output of `pathway_cross_talk()` or `cluster_communication()` function}

\item{all}{logical, if the function have to plot all the edges or only the significant ones. If `TRUE`, the function uses `p_val, FDR` and `ct_val` to identify the 
significant ones, that are plotted with a solid line, and the not significant with a dashed line. If `FALSE`, the functions uses the same filtering parameters to 
filter the data and plot only the CT passing the filtering threshold as a solid line. If `NULL` the function does not 
filter the data and plot all the edges as a solid line}

\item{p_val, FDR, ct_val}{filtering values. If one of these is set to `NULL` the function ignores it}

\item{community}{logical or an object resulting from igraph community calculation. If `TRUE`, the function calculates
the communities by using fastgreedy algorithm, if `FALSE` the function does not consider communities. Otherwise, if a
community object is provided, the function uses it and color the vertices accordingly}

\item{pal_community}{color palette to be used to color the vertices according to the communities. If not provided,
the function uses `rainbow()` palette}

\item{edge_col_by}{name of the column to be used to color the edges. If `NULL` the edges will be not colored}

\item{edge_pal}{color to be used to create the gradient to color the edges. If not provided, the function uses "blue" 
to "red"}

\item{edge_value}{vector of the two values to be used to create the gradient to color the edges. If not provided, 
the function uses minimum and maximum}

\item{edge_width}{logical, if the edge widths should be proportional to `edge_col_by` values. If `TRUE` the `edge_col_by` values are scaled between 1 to 9 to set the
edge width accordingly}

\item{edge_adj_col}{value used to adjust color transparency of the edges}

\item{file_out}{name of the jpeg file produced. If not provided, the plot will be automatically named `ct_network.jpeg`}

\item{width, height, res, units}{graphical value of `jpeg()` function}

\item{layout}{layout to be used in igraph plotting. If not provided, the function calculates it}

\item{legend_edge_col}{logical, if to plot the legend of the color of the edges}

\item{legend_filt}{logical, if to plot legend of the different lines used when `all = T`}

\item{legend_community}{logical, if to plot the legend of the community color used}

\item{x_filt, y_filt, x_comm, y_comm, }{x and y coordinates for `legend_filt`, `legend_community`, 
positioning in the plot. See `legend()` function for more details}

\item{xl, yb, xr, yt}{coordinates for the positioning of the gradient legend for `legend_edge_col`. See `color.legend()` 
and `rect()` functions for more details}

\item{...}{further graphical parameters to be passed to `igraph.plot()` function}
}
\value{
the function produce the plot saved with the name passed to `file_out` and also returns the layout,
the igraph object used for plotting and the communities (if calculated)
}
\description{
The function elaborates the results of `pathway_cross_talk()` or `cluster_communication()` functions to obtain a graphical 
representation of the cross-talk network
}
\details{
The functions uses `pathway_cross_talk()` or `cluster_communication()` output to build a CT network. Then, the network is plotted with
the edges colored by a value of interest. The user may decide if to plot all the edges, color the vertices by 
their community, scale the dimension of the edges over a variable of interest.
}
